create or replace trigger secure_emp
BEFORE INSERT ON DEPT
BEGIN
IF (TO_CHAR(SYSDATE,'DY') IN('SAT','SUN'))OR(TO_CHAR(SYSDATE,'HH24:MI')
NOT BETWEEN'08:00'AND'18:00')THEN
RAISE_APPLICATION_ERROR(-20500,'YOU MAY INSERT INTO DEPARTMENT TABLE ONLY DURING NORMAL BUSINESS HOURS');
END IF;
END;


 INSERT INTO DEPT VALUES(30,'CONS','BANGALORE')
  2  ;
INSERT INTO DEPT VALUES(30,'CONS','BANGALORE')
            *
ERROR at line 1:
ORA-20500: YOU MAY INSERT INTO DEPARTMENT TABLE ONLY DURING NORMAL BUSINESS
HOURS
ORA-06512: at "SCOTT.SECURE_EMP", line 4
ORA-04088: error during execution of trigger 'SCOTT.SECURE_EMP'

create or replace trigger SALTRI
BEFORE INSERT OR UPDATE OF SAL ON EMP
FOR EACH ROW
BEGIN
IF NOT (:NEW.JOB IN ('ANALYST','PRESIDENT')) AND
:NEW.SAL>3000 THEN
RAISE_APPLICATION_ERROR(-20501,'EMPLOYEE CANNOT HAVE SALARY MORE THAN 3000');
END IF;
END;


 UPDATE EMP SET SAL=3500 WHERE ENAME='MILLER';
UPDATE EMP SET SAL=3500 WHERE ENAME='MILLER'
       *
ERROR at line 1:
ORA-20501: EMPLOYEE CANNOT HAVE SALARY MORE THAN 3000
ORA-06512: at "SCOTT.SALTRI", line 4
ORA-04088: error during execution of trigger 'SCOTT.SALTRI'

CREATE TABLE EMPAUD(
USER_NAME VARCHAR(20),
TIMESTAMP DATE,
EMPNO NUMBER(20),
ENAME VARCHAR(20),
OLD_JOB VARCHAR(20),
NEW_JOB VARCHAR(20),
OLD_SAL NUMBER(20),
NEW_SAL NUMBER(20),
OLD_DEPTNO NUMBER(20),
NEW_DEPTNO NUMBER(20)
);

CREATE OR REPLACE TRIGGER AUDEMP
AFTER DELETE OR UPDATE OR INSERT ON EMP
FOR EACH ROW
BEGIN
INSERT INTO EMPAUD
VALUES (USER,SYSDATE,:OLD.EMPNO,:OLD.ENAME,:OLD.JOB,:NEW.JOB,:OLD.SAL,:NEW.SAL,:OLD.DEPTNO,:NEW.DEPTNO);
END;
/

UPDATE EMP SET SAL=2000 WHERE ENAME='MILLER';

SELECT * FROM EMPAUD;

USER_NAME            TIMESTAMP      EMPNO ENAME                OLD_JOB              NEW_JOB              OLD_SAL    NEW_SAL OLD_DEPTNO NEW_DEPTNO
-------------------- --------- ---------- -------------------- -------------------- -------------------- ---------- ---------- ---------- ----------
SCOTT                04-JAN-20       7934 MILLER               CLERK                CLERK                   1300          2000         10         10


DECLARE
CURSOR C1 IS SELECT * FROM DEPT;
CURSOR C2 (PDNO NUMBER) IS SELECT * FROM EMP WHERE DEPTNO=&PDNO;
BEGIN 
FOR VDEP IN C1
LOOP
DBMS_OUTPUT.PUT_LINE('-------------');
DBMS_OUTPUT.PUT_LINE(VDEP.DEPTNO||' '||VDEP.DNAME);
DBMS_OUTPUT.PUT_LINE('-------------');
FOR EREC IN C2(VDEP.DEPTNO)
LOOP
DBMS_OUTPUT.PUT_LINE(EREC.EMPNO||' '||EREC.ENAME||' '||EREC.DEPTNO);
END LOOP;
END LOOP;
END;
/
Enter value for pdno: 20
old   3: CURSOR C2 (PDNO NUMBER) IS SELECT * FROM EMP WHERE DEPTNO=&PDNO;
new   3: CURSOR C2 (PDNO NUMBER) IS SELECT * FROM EMP WHERE DEPTNO=20;
-------------
10 ACCOUNTING
-------------
7369 SMITH 20
7566 JONES 20
7788 SCOTT 20
7876 ADAMS 20
7902 FORD 20
-------------
20 RESEARCH
-------------
7369 SMITH 20
7566 JONES 20
7788 SCOTT 20
7876 ADAMS 20
7902 FORD 20
-------------
30 SALES
-------------
7369 SMITH 20
7566 JONES 20
7788 SCOTT 20
7876 ADAMS 20
7902 FORD 20
-------------
40 OPERATIONS
-------------
7369 SMITH 20
7566 JONES 20
7788 SCOTT 20
7876 ADAMS 20
7902 FORD 20

PL/SQL procedure successfully completed.

CREATE TABLE SCHEMA (USER_ID VARCHAR(20),LOG_DATE DATE,ACTION VARCHAR(10));

CREATE OR REPLACE TRIGGER LOGON
AFTER LOGON ON SCHEMA
BEGIN
INSERT INTO SCHEMA
VALUES (USER,SYSDATE,'LOGGING ON');
END;
/

CREATE OR REPLACE TRIGGER LOGOFF
BEFORE LOGOFF ON SCHEMA
BEGIN
INSERT INTO SCHEMA
VALUES (USER,SYSDATE,'LOGGING OFF');
END;
/
