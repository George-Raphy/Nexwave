DECLARE 
VNAME VARCHAR(10);
BEGIN
VNAME:='KEVIN';
DBMS_OUTPUT.PUT_LINE('THE NAME IS '||VNAME);
END;
/

THE NAME IS KEVIN

PL/SQL procedure successfully completed.

DECLARE 
VNUM2 NUMBER;
VNUM3 NUMBER;
BEGIN
DBMS_OUTPUT.PUT_LINE('THE SUM IS '||(&VNUM2+&VNUM3));
END;
/

Enter value for vnum2: 56
Enter value for vnum3: 87
old   5: DBMS_OUTPUT.PUT_LINE('THE SUM IS '||(&VNUM2+&VNUM3));
new   5: DBMS_OUTPUT.PUT_LINE('THE SUM IS '||(56+87));
THE SUM IS 143

PL/SQL procedure successfully completed.

DECLARE 
VENAME EMP.ENAME%TYPE;
VJOB EMP.JOB%TYPE;
VSAL EMP.SAL%TYPE;
VEMPNO EMP.EMPNO%TYPE:=&VEMPNO;
BEGIN
SELECT ENAME,JOB,SAL INTO VENAME,VJOB,VSAL FROM EMP WHERE EMPNO=VEMPNO;
DBMS_OUTPUT.PUT_LINE('NAME:'||VENAME||CHR(10)||'JOB:'||VJOB||CHR(10)||'SALARY:'||VSAL);
END;
/

Enter value for vempno: 7369
old   5: VEMPNO EMP.EMPNO%TYPE:=&VEMPNO;
new   5: VEMPNO EMP.EMPNO%TYPE:=7369;
NAME:SMITH
JOB:CLERK
SALARY:800

PL/SQL procedure successfully completed


VARIABLE C NUMBER;
DECLARE
A NUMBER;
B NUMBER;
BEGIN
:C:=&A+&B;
END;
/
Enter value for a: 23
Enter value for b: 32
old   5: :C:=&A+&B;
new   5: :C:=23+32;

PL/SQL procedure successfully completed.

SQL> PRINT C;

         C
----------
        55


VARIABLE VENAME VARCHAR2(10);
VARIABLE VJOB VARCHAR2(10);
VARIABLE VSAL NUMBER;
DECLARE 
VEMPNO EMP.EMPNO%TYPE:=&VEMPNO;
BEGIN
SELECT ENAME,JOB,SAL INTO :VENAME,:VJOB,:VSAL FROM EMP WHERE EMPNO=VEMPNO;
END;
/

Enter value for vempno: 7369
old   2: VEMPNO EMP.EMPNO%TYPE:=&VEMPNO;
new   2: VEMPNO EMP.EMPNO%TYPE:=7369;

PL/SQL procedure successfully completed.

SQL> PRINT VENAME;

VENAME
--------------------------------
SMITH

SQL> PRINT VJOB;

VJOB
--------------------------------
CLERK

SQL> PRINT VSAL;

      VSAL
----------
       800

CREATE SEQUENCE S2 START WITH 10 INCREMENT BY 1 MAXVALUE 20;
DECLARE 
VID NUMBER;
BEGIN 
VID:=S2.NEXTVAL;
DBMS_OUTPUT.PUT_LINE(VID);
END;
/

10

PL/SQL procedure successfully completed.


BEGIN <<OUTER>>
DECLARE
VFNAME VARCHAR(10):='PATRICK';
VDOB DATE:='20-APR-1972';
BEGIN
DECLARE
VCNAME VARCHAR(10):='MIKE';
VDOB DATE:='12-DEC-2002';
BEGIN
DBMS_OUTPUT.PUT_LINE('FATHER''S NAME: '||VFNAME);
DBMS_OUTPUT.PUT_LINE('DATE OF BIRTH: '||OUTER.VDOB);
DBMS_OUTPUT.PUT_LINE('CHILD''S NAME: '||VCNAME);
DBMS_OUTPUT.PUT_LINE('DATE OF BIRTH: '||VDOB);
END;
END;
END OUTER;
/

FATHER'S NAME: PATRICK
DATE OF BIRTH: 20-APR-72
CHILD'S NAME: MIKE
DATE OF BIRTH: 12-DEC-02

PL/SQL procedure successfully completed.


DECLARE
VAGE NUMBER :=&VAGE;
BEGIN
IF VAGE < 11 THEN
DBMS_OUTPUT.PUT_LINE('I AM A CHILD');
ELSIF VAGE < 20 THEN
DBMS_OUTPUT.PUT_LINE('I AM A YOUNG');
ELSIF VAGE < 30 THEN
DBMS_OUTPUT.PUT_LINE('I AM A TWENTIES');

ELSIF VAGE < 40 THEN
DBMS_OUTPUT.PUT_LINE('I AM A THIRTIES');

ELSIF VAGE < 50 THEN
DBMS_OUTPUT.PUT_LINE('I AM A FORTIES');
ELSE
DBMS_OUTPUT.PUT_LINE('I AM ALWAYS YOUNG');
END IF;
END;
/

Enter value for vage: 20
old   2: VAGE NUMBER :=&VAGE;
new   2: VAGE NUMBER :=20;
I AM A TWENTIES

PL/SQL procedure successfully completed.

DECLARE 
VCOUNTER NUMBER :=1;
BEGIN
LOOP
DBMS_OUTPUT.PUT_LINE(VCOUNTER);
VCOUNTER :=VCOUNTER+1;
EXIT WHEN VCOUNTER>5;
END LOOP;
END;
/


CLARK 2450
KING 5000
MILLER 1300

PL/SQL procedure successfully completed.

1
2
3
4
5

PL/SQL procedure successfully completed.

BEGIN
FOR I IN REVERSE 1..5
LOOP
DBMS_OUTPUT.PUT_LINE(I);
END LOOP;
END;
/

5
4
3
2
1

PL/SQL procedure successfully completed.

BEGIN
FOR I IN 1..5
LOOP
FOR J IN 1..I
LOOP
DBMS_OUTPUT.PUT('*');
END LOOP;
DBMS_OUTPUT.PUT_LINE('');
END LOOP;
END;
/

*
**
***
****
*****

PL/SQL procedure successfully completed.

DECLARE
VEMP EMP%ROWTYPE;
VEMPNO EMP.EMPNO%TYPE:=&VEMPNO;
BEGIN
SELECT * INTO VEMP FROM EMP WHERE EMPNO=VEMPNO;
INSERT INTO EMP3 VALUES(VEMP.EMPNO,VEMP.DEPTNO,VEMP.JOB);
DBMS_OUTPUT.PUT_LINE(VEMP.ENAME||' '||VEMP.SAL);
END;
/

Enter value for vempno: 7369
old   3: VEMPNO EMP.EMPNO%TYPE:=&VEMPNO;
new   3: VEMPNO EMP.EMPNO%TYPE:=7369;
SMITH 800

PL/SQL procedure successfully completed.

DECLARE 
CURSOR C1 IS SELECT * FROM EMP WHERE DEPTNO=10;
VEMP EMP%ROWTYPE;
BEGIN
IF NOT C1%ISOPEN THEN
OPEN C1;
END IF;
LOOP
FETCH C1 INTO VEMP;
EXIT WHEN C1%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(VEMP.ENAME||' '||VEMP.SAL);
END LOOP;
CLOSE C1;
END;
/

CLARK 2450
KING 5000
MILLER 1300

PL/SQL procedure successfully completed.


DECLARE 
BEGIN
FOR I IN (SELECT * FROM EMP WHERE DEPTNO=10)
LOOP
DBMS_OUTPUT.PUT_LINE(I.ENAME||' '||I.SAL);
END LOOP;
END;
/

DECLARE 
BEGIN
FOR I IN (SELECT * FROM EMP WHERE DEPTNO=&DEPTNO AND JOB='&JOB')
LOOP
DBMS_OUTPUT.PUT_LINE(I.ENAME||' '||I.SAL);
END LOOP;
END;
/

DECLARE 
VDEPTNO EMP.DEPTNO%TYPE:=&DEPTNO;
VENAME EMP.ENAME%TYPE;
BEGIN
SELECT ENAME INTO VENAME FROM EMP WHERE DEPTNO=VDEPTNO;
EXCEPTION
WHEN TOO_MANY_ROWS THEN
DBMS_OUTPUT.PUT_LINE('MANY ROWS');
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO DATA FOUND');
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('AN ERROR OCCURED');
END;
/

Enter value for deptno: 23
old   2: VDEPTNO EMP.DEPTNO%TYPE:=&DEPTNO;
new   2: VDEPTNO EMP.DEPTNO%TYPE:=23;
NO DATA FOUND

PL/SQL procedure successfully completed.

Enter value for deptno: 20
old   2: VDEPTNO EMP.DEPTNO%TYPE:=&DEPTNO;
new   2: VDEPTNO EMP.DEPTNO%TYPE:=20;
MANY ROWS

PL/SQL procedure successfully completed.

DECLARE 
E EXCEPTION ;
PRAGMA EXCEPTION_INIT(E,-02292);
BEGIN
DELETE FROM DEPT
WHERE DEPTNO=10;
EXCEPTION
WHEN E THEN
DBMS_OUTPUT.PUT_LINE('YOU CANNOT DELETE PARENT TABLE');
DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/

YOU CANNOT DELETE PARENT TABLE
ORA-02292: integrity constraint (SCOTT.FK_DEPTNO) violated - child record found

PL/SQL procedure successfully completed.

DECLARE 
E EXCEPTION ;
PRAGMA EXCEPTION_INIT(E,-01400);
BEGIN
INSERT INTO DEPT 
VALUES(NULL,'MARKETING','NEW YORK');
EXCEPTION
WHEN E THEN
DBMS_OUTPUT.PUT_LINE('YOU CANNOT NULL VALUES TO A PRIMARY KEY');
DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/

YOU CANNOT NULL VALUES TO A PRIMARY KEY
ORA-01400: cannot insert NULL into ("SCOTT"."DEPT"."DEPTNO")

PL/SQL procedure successfully completed.

/

DECLARE 
E EXCEPTION ;
X EXCEPTION;
PRAGMA EXCEPTION_INIT(E,-02292);
PRAGMA EXCEPTION_INIT(X,-01722);
BEGIN
DELETE FROM DEPT
WHERE DEPTNO='&A';
EXCEPTION
WHEN E THEN
DBMS_OUTPUT.PUT_LINE('YOU CANNOT DELETE PARENT TABLE');
DBMS_OUTPUT.PUT_LINE(SQLERRM);
WHEN X THEN
DBMS_OUTPUT.PUT_LINE('YOU CANNOT INPUT A CHARACTER');
DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/

Enter value for a: G
old   8: WHERE DEPTNO='&A';
new   8: WHERE DEPTNO='G';
YOU CANNOT INPUT A CHARACTER
ORA-01722: invalid number

PL/SQL procedure successfully completed.